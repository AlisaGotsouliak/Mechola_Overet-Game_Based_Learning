@using template.Shared.DTOs
@inherits Microsoft.AspNetCore.Components.Forms.InputText
@inject HasLetters SharedData;

<div>
<input @attributes="@AdditionalAttributes" class="@CssClass default-input @inputClass" @bind="@CurrentValueAsString" @bind:event="oninput" @onkeyup="countChars" maxlength="@maxLength" />
<p class="numOfChars">@length.ToString()/@maxLength.ToString()</p>
</div>

@code {
    //  פרמטר לקבלת אורך מחרוזת מינימלי
    [Parameter]
    public int minLength { get; set; } = 3;

    // פרמטר לקבלת אורך מחרוזת מקסימלי
    [Parameter]
    public int maxLength { get; set; } = 30;
    //  משתנה שיכיל את שם המחלקה הרלוונטי במידה ואורך המחרוזת תקין, דורש
    // אזהרה או לא תקין
    string inputClass = "";
    //  משתנה שיכיל את אורך המחרוזת
    int length = 0;

    protected override async Task OnInitializedAsync()
    {
        length = CurrentValueAsString.Length;
        SharedData.HasLetter = false;
    }
    void countChars()
    {
         if (CurrentValueAsString != null)
        {
            length = CurrentValueAsString.Length;
            for (int i = 0; i < CurrentValueAsString.Length; i++)
            {
                if (CurrentValueAsString[i].ToString() != " ")
                {
                    SharedData.HasLetter = true;
                    break;
                }
                else
                {
                    SharedData.HasLetter = false;
                }
            }
        }
        if (length >= minLength && length < maxLength && SharedData.HasLetter)
        {
            inputClass = "good-input";
        }
        else if (length == maxLength && SharedData.HasLetter)
        {
            inputClass = "warnning-input";
        }
        else if (length > maxLength || !SharedData.HasLetter)
        {
            inputClass = "danger-input";
        }
    }

}

