@page "/EditGame/RouteParams/{GameCode:int}/{GameName}/{GameTime:int}"
@using template.Shared.Games;
@using template.Shared.Models.Games;
@using template.Client.Components;
@inject HttpClient Http;

<div class="page_bg" style="display:flex; justify-content:center; flex-direction:column">
    <div id="pageTop">
        <h3>עריכת משחק</h3>
        <div>
            @if (full_gameInfo.question_List != null)
            {
                if (full_gameInfo.question_List.Count >= 10)
                {
                    <div id="canPublishGame" class="publishCurrentGameStatus">
                        <div class="ToolTipInfos">
                            <p>ניתן לפרסם את המשחק</p>
                        </div>
                    </div>
                }
                else
                {
                    <div id="canNotPublishGame" class="publishCurrentGameStatus">
                        <div class="ToolTipInfos">
                            <p>
                                יש ליצור עוד
                                @if (10 - full_gameInfo.question_List.Count>1){
                                    @(10 - full_gameInfo.question_List.Count)
                                    @(" שאלות")
                                }
                                else
                                {
                                    @("שאלה אחת")
                                }
                            </p>
                        </div>
                    </div>
                }
            }

            <p>תנאי פרסום משחק: לפחות 10 שאלות</p>
            <a href="https://localhost:7022/GamesList">
                <input type="button" value="למשחקים שלי" class="Allbuttons" />
            </a>
            
            
        </div>
    </div>
    <div id="allAccordions">
        <div id="settingsAndQList">
            <div class="accordion" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            <span class="tabName">
                                הגדרות כלליות
                            </span>
                        </button>
                    </h2>
                    @* ***************************** Game Settings for new game ***************************** *@
                    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne">
                        <div class="accordion-body">

                            @if (GameName == "")
                            {
                                <EditForm Model="gameToAdd" OnValidSubmit="CreateGame">
                                    <DataAnnotationsValidator />
                                    <div id="gameSettingsContainer">
                                        <div>שם משחק:</div>
                                        <div>
                                            <div id="gameNameToolTip" class="toolTips">
                                                ?
                                                <div class="ToolTipInfos">
                                                    <p>נדרשים לפחות 3 תווים</p>
                                                </div>
                                            </div>
                                        </div>

                                        <CustomInputText @bind-Value="gameToAdd.Game" maxLength="20" minLength="3" />
                                        <ValidationMessage For="@(() => gameToAdd.Game)" />
                                        <div>זמן לשאלה:</div>
                                        <div id="qTimeToolTip">
                                            ?
                                            <div class="ToolTipInfos">
                                                <p>זמן קבוע לכל השאלות</p>
                                            </div>
                                        </div>
                                        <div>
                                            <select id="timeOptions" @bind="gameToAdd.Time">
                                                <option value="50">50 שניות</option>
                                                <option value="60">60 שניות</option>
                                                <option value="90">90 שניות</option>
                                                <option value="0">ללא הגבלה</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="buttonContainer">
                                        <input type="submit" value="שמירת הגדרות" class="Allbuttons" />
                                    </div>
                                </EditForm>
                            }
                            else @* ***************************** Edit Game Settings ***************************** *@
                            {
                                <EditForm Model="gameToAdd" OnValidSubmit="UpdateGame">
                                    <DataAnnotationsValidator />
                                    <div id="gameSettingsContainer">
                                        <div>שם משחק:</div>
                                        <div>
                                            <div id="gameNameToolTip">
                                                ?
                                                <div class="ToolTipInfos">
                                                    <p>נדרשים לפחות 3 תווים</p>
                                                </div>
                                            </div>
                                        </div>
                                        <CustomInputText @bind-Value="gameToAdd.Game" maxLength="20" minLength="3" />
                                        <ValidationMessage For="@(() => gameToAdd.Game)" />
                                        <div>זמן לשאלה:</div>
                                        <div id="qTimeToolTip">
                                            ?
                                            <div class="ToolTipInfos">
                                                <p>זמן קבוע לכל השאלות</p>
                                            </div>
                                        </div>
                                        <div>
                                            <select id="timeOptions" @bind="gameToAdd.Time">
                                                <option value="50">50 שניות</option>
                                                <option value="60">60 שניות</option>
                                                <option value="90">90 שניות</option>
                                                <option value="0">ללא הגבלה</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="buttonContainer">
                                        @if (gameToAdd.Game.Length < 3)
                                        {
                                            <input type="submit" value="שמירת הגדרות" class="Allbuttons" disabled />
                                        }
                                        else
                                        {
                                            <input type="submit" value="שמירת הגדרות" class="Allbuttons" />
                                        }
                                    </div>
                                </EditForm>
                            }

                        </div>
                    </div>
                </div>
            </div>
            @* ***************************** Question List ***************************** *@
            @if (GameName != "" || CanAddQuestions)
            {
                <div class="accordion" id="accordionExample">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingTwo">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                שאלות המשחק
                                @if (full_gameInfo.question_List != null)
                                {
                                    @("(" + full_gameInfo.question_List.Count + ")")
                                }
                            </button>
                        </h2>
                        <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo">
                            <div class="accordion-body">
                                @if (gameToAdd.Game != " " && gameToAdd.Time != null)
                                {
                                    <div id="listOfQuestionsContiner">
                                        @if (full_gameInfo.question_List != null)
                                        {
                                            @foreach (QuestionDB question in full_gameInfo.question_List)
                                            {
                                                <div @onclick="(() =>ShowQuestion(question))" class="questionInList">
                                                    <p>@question.QuestionText</p>
                                                    <div @onclick="() => RemoveQuestion(question)" class="deleteIcon"></div>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <div class="buttonContainer">
                                        <input type="button" value="+" @onclick="AddInput" class="Allbuttons addButton">
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="accordion" id="accordionExample">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingTwo">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo" disabled style="opacity:70%">
                                שאלות המשחק
                                @if (full_gameInfo.question_List != null)
                                {
                                    @("(" + full_gameInfo.question_List.Count + ")")
                                }
                                else{
                                    @("(0)")  
                                    }
                                </button>
                        </h2>
                    </div>
                </div>
            }
        </div>

        @* ***************************** Create new question ***************************** *@

        @if (isShown == "true")
        {
            <div class="accordion" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingThree">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse">
                            יצירת שאלה
                        </button>
                    </h2>
                    <div id="collapseThree" class="accordion-collapse show" aria-labelledby="headingThree">
                        <div class="accordion-body">
                            <div class="newQHeadlines">
                                <p>שאלה:</p>
                                <div id="questionToolTip">
                                    ?
                                    <div class="ToolTipInfos">
                                        <p>נדרשים לפחות 7 תווים</p>
                                    </div>
                                </div>
                            </div>

                            <EditForm Model="GameToShow" OnValidSubmit="AddQuestion">
                                <DataAnnotationsValidator />
                                <CustomInputTextArea @bind-Value="GameToShow.QuestionText" maxLength="100" minLength="7" id="questionInput" />
                                <ValidationMessage For="@(() => GameToShow.QuestionText)" />

                                <label for="FileInputID" class="insertQuestionImage"></label>
                                <InputFile id="FileInputID" OnChange="(e => UploadQuestioImage(e, GameToShow.QuestionImage))" hidden />

                                @if (GameToShow.Answers != null && GameToShow.Answers.Count != 0)
                                {
                                    int i = 0;
                                    bool oneAnsCorrect = false;
                                    foreach (AnswerDB ans in GameToShow.Answers)
                                    {
                                        i++;
                                        <input type="radio" name="answersGroup" checked="@ans.IsCorrect" @onchange="() => SelectAnswer(ans)" />
                                        @if (ans.IsCorrect)
                                            oneAnsCorrect = true;
                                        @*@if (ans.AnswerText != "" || ans.AnswerImage == "No image")
                            {
                            <CustomInputTextArea @bind-Value="ans.AnswerText" maxLength="30" minLength="0"></CustomInputTextArea>
                            <div class="deleteIcon" @onclick="(() =>DeleteAns(ans))"></div>
                            }
                            else
                            {
                            <label for="FileInputID" class="insertQuestionImage"></label>
                            <InputFile id="FileInputID" OnChange="(e => UploadAnswerImage(e, ans))" hidden />
                            <div class="deleteIcon" @onclick="(() =>DeleteAns(ans))"></div>
                            }*@
                                        @if (ans.AnswerImage == "No image")
                                        {
                                            <CustomInputTextArea @bind-Value="ans.AnswerText" maxLength="30" minLength="0"></CustomInputTextArea>
                                            <div class="deleteIcon" @onclick="(() =>DeleteAns(ans))"></div>
                                        }
                                        else if (ans.AnswerImage == null)
                                        {
                                            <label for="FileInputID" class="insertQuestionImage"></label>
                                            <InputFile id="FileInputID" OnChange="(e => UploadAnswerImage(e, ans))" hidden />
                                            <div class="deleteIcon" @onclick="(() =>DeleteAns(ans))"></div>
                                        }
                                        else
                                        {
                                            <img src="@ans.AnswerImage" height="90" width="90" />
                                        }
                                        @if (i == GameToShow.Answers.Count)
                                        {
                                            @if (GameToShow.Answers.Count < 6)
                                            {
                                                <div class="addAnsContainer">
                                                    <input type="button" value="+" @onclick="AddAnsText" class="Allbuttons addButton">
                                                </div>
                                            }
                                        }
                                    }
                                    @if (GameToShow.Answers.Count >= 2 && oneAnsCorrect)
                                    {
                                        <input type="button" value="ביטול שינוים" class="Allbuttons cancelChanges" @onclick="Cancel">
                                        <input type="submit" value="שמירת שאלה" class="Allbuttons">
                                    }
                                    else
                                    {
                                        <input type="button" value="ביטול שינוים" class="Allbuttons cancelChanges" @onclick="Cancel">
                                        <input type="submit" value="שמירת שאלה" class="Allbuttons" style="opacity:70%" disabled>

                                    }
                                }
                                else
                                {
                                    <input type="button" value="+" @onclick="AddAnsText" class="Allbuttons addButton">

                                    <input type="button" value="ביטול שינוים" class="Allbuttons cancelChanges" @onclick="Cancel">
                                    <input type="submit" value="שמירת שאלה" class="Allbuttons" style="opacity:70%" disabled>
                                }
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        }
        @* ***************************** Edit question ***************************** *@
        else if (isShown == "Edit")
        {
            <div class="accordion" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingThree">
                        <button class="accordion-button" data-bs-toggle="collapse">
                            עריכת שאלה
                        </button>
                    </h2>
                    <div id="collapseThree" class="accordion-collapse show" aria-labelledby="headingThree">
                        <div class="accordion-body">
                            <div class="newQHeadlines">
                                <p>שאלה:</p>
                                <div id="questionToolTip">
                                    ?
                                    <div class="ToolTipInfos">
                                        <p>נדרשים לפחות 7 תווים</p>
                                    </div>
                                </div>
                            </div>
                            <div>
                                @if (GameToShow != null)
                                {
                                    <EditForm Model="GameToShow" OnValidSubmit="EditQuestion">
                                        <DataAnnotationsValidator />
                                        <div id="questionArea">
                                            <CustomInputTextArea @bind-Value="GameToShow.QuestionText" maxLength="100" minLength="7" id="questionInput" />
                                            <ValidationMessage For="@(() => GameToShow.QuestionText)" />
                                            @if (GameToShow.QuestionImage == "No image")
                                            {
                                                <label for="FileInputID" class="insertQuestionImage"></label>
                                                <InputFile id="FileInputID" OnChange="(e => UploadQuestioImage(e, GameToShow.QuestionImage))" hidden />
                                            }
                                            else
                                            {
                                                <div id="questionImageContainer">
                                                    <div id="editOrDeleteQImage">
                                                        <div>
                                                            <label for="FileInputIDChangeImage" class="insertQuestionImage"></label>
                                                            <InputFile id="FileInputIDChangeImage" OnChange="(e => UploadQuestioImage(e, GameToShow.QuestionImage))" hidden />
                                                        </div>
                                                        <div @onclick="(() =>MakeDeleteList(GameToShow.QuestionImage))"></div>
                                                    </div>
                                                    <img src="@GameToShow.QuestionImage" height="90" width="90" />
                                                </div>
                                            }
                                        </div>
                                        <div class="newQHeadlines">
                                            <p>מסיחים:</p>
                                            <div id="answersToolTip">
                                                ?
                                                <div class="ToolTipInfos">
                                                    <p>נדרשים 2-6 מסיחים</p>
                                                </div>
                                            </div>
                                        </div>
                                        @if (GameToShow.Answers.Count != 0 && GameToShow.Answers != null)
                                        {
                                            int i = 0;
                                            <div id="answersArea">
                                                @foreach (AnswerDB ans in GameToShow.Answers)
                                                {
                                                    i++;
                                                    <div class="ansContainer">
                                                        <input type="radio" name="answersGroup" checked="@ans.IsCorrect" @onchange="() => SelectAnswer(ans)" />

                                                        @if (ans.AnswerImage == "No image")
                                                        {
                                                            <CustomInputTextArea @bind-Value="ans.AnswerText" maxLength="30" minLength="0"></CustomInputTextArea>
                                                            <div class="deleteIcon" @onclick="(() =>DeleteAns(ans))"></div>
                                                        }
                                                        else if (ans.AnswerImage == null)
                                                        {
                                                            <label for="FileAInputIDAns" class="insertQuestionImage ansImageContainer"></label>
                                                            <InputFile id="FileAInputIDAns" OnChange="(e => UploadAnswerImage(e, ans))" hidden />
                                                            <div class="deleteIcon deleteImageIcon" @onclick="(() =>DeleteAns(ans))"></div>
                                                        }
                                                        else
                                                        {
                                                            <div class="ansImageContainer">
                                                                <img src="@ans.AnswerImage" height="90" width="90" />
                                                                <div class="editAnsImage">
                                                                    <label for="FileAInputIDAnsChange" class="insertQuestionImage"></label>
                                                                    <InputFile id="FileAInputIDAnsChange" OnChange="(e => UploadAnswerImage(e, ans))" hidden />
                                                                </div>
                                                            </div>
                                                            <div class="deleteIcon deleteImageIcon" @onclick="(() =>DeleteAns(ans))"></div>
                                                        }
                                                    </div>
                                                    @if (i == GameToShow.Answers.Count)
                                                    {
                                                        @if (GameToShow.Answers.Count < 6)
                                                        {
                                                            <div class="addAnsContainer">
                                                                <div id="addAnsButton">
                                                                    <input type="button" value="+" class="Allbuttons addButton">
                                                                    <div id="addAnsOptions">
                                                                        <div id="options">
                                                                            <button type="button" @onclick="AddAnsText">
                                                                                <div id="inputIcon"></div>
                                                                                <div>תיבת טקסט</div>
                                                                            </button>

                                                                            <button type="button" @onclick="AddAnsImage">
                                                                                <div id="imageIcon"></div>
                                                                                <div>תמונה</div>
                                                                            </button>
                                                                        </div>
                                                                        <div class="Allbuttons addButton">
                                                                            +
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                }
                                            </div>

                                            @if (GameToShow.Answers.Count >= 2)
                                            {
                                                <div class="questionButtonAndSubmitContainer">
                                                    <input type="button" value="ביטול שינוים" class="Allbuttons cancelChanges" @onclick="Cancel">
                                                    <input type="submit" value="שמירת שאלה" class="Allbuttons">
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="questionButtonAndSubmitContainer">
                                                    <input type="button" value="ביטול שינוים" class="Allbuttons cancelChangescancelChanges" @onclick="Cancel">
                                                    <input type="submit" value="שמירת שאלה" class="Allbuttons" style="opacity:70%" disabled>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="addAnsContainer">
                                                <div id="addAnsButton">
                                                    <input type="button" value="+" class="Allbuttons addButton">
                                                    <div id="addAnsOptions">
                                                        <div id="options">
                                                            <button type="button" @onclick="AddAnsText">
                                                                <div id="inputIcon"></div>
                                                                <div>תיבת טקסט</div>
                                                            </button>

                                                            <button type="button" @onclick="AddAnsImage">
                                                                <div id="imageIcon"></div>
                                                                <div>תמונה</div>
                                                            </button>
                                                        </div>
                                                        <div class="Allbuttons addButton">
                                                            +
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="questionButtonAndSubmitContainer">
                                                <input type="button" value="ביטול שינוים" class="Allbuttons cancelChanges" @onclick="Cancel">
                                                <input type="submit" value="שמירת שאלה" class="Allbuttons" style="opacity:70%" disabled>
                                            </div>
                                        }
                                    </EditForm>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <p>@msg</p>
</div>
@code {
    bool CanAddQuestions = false;
    GameToAdd gameToAdd = new GameToAdd();
    SettingsUpdate settingToSend = new SettingsUpdate();
    QuestionDB GameToShow = new QuestionDB();
    FullGame Temp = new FullGame();
    List<string> DeletedImages = new List<string>();


    long maxFileSize = 4194304;
    string myFileImage = "";
    string isShown = "false";
    string msg = "";
    FullGame full_gameInfo = new FullGame();
    [Parameter]
    public int GameCode { get; set; }
    [Parameter]
    public string GameName { get; set; }
    [Parameter]
    public int GameTime { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (GameName == " ")
            GameName = "";
        gameToAdd.Time = GameTime;
        gameToAdd.Game = GameName;
        if (GameCode != 0)
        {
            settingToSend.GameCode = GameCode;
            GameToShow.GameID = GameCode;
        }

        if (GameName != "")
        {
            var full_game_res = await Http.GetAsync("api/Games/GetFullGame/" + GameCode);
            if (full_game_res.IsSuccessStatusCode)
            {
                full_gameInfo = full_game_res.Content.ReadFromJsonAsync<FullGame>().Result;
            }
            else if (GameName != "")
                msg = full_game_res.Content.ReadAsStringAsync().Result;
        }
    }

    private void SelectAnswer(AnswerDB selectedAnswer)
    {
        foreach (var answer in GameToShow.Answers)
        {
            answer.IsCorrect = answer == selectedAnswer; //goes through all answers and sets the IsCorrect to true only for the selected answer and false for all others.
        }
    }

    async Task CreateGame()
    {
        //שליחת המשחק החדש לקונטרולר
        var newGameRes = await Http.PostAsJsonAsync("api/Games/addGame", gameToAdd);
        if (newGameRes.IsSuccessStatusCode == true)
        {
            msg = "הוספת משחק בוצע";
            //החזרת המשחק והוספתו לרשימת המשחקים כדי שיתווסף לטבלה
            GameToCard newGame = newGameRes.Content.ReadFromJsonAsync<GameToCard>().Result;
            full_gameInfo.Game = newGame.Game;
            full_gameInfo.Time = newGame.Time;
            GameCode = newGame.GameCode;
            CanAddQuestions = true;
        }
        else
        {
            CanAddQuestions = false;
            string error = newGameRes.Content.ReadAsStringAsync().Result;
            ShowError(error);
        }
    }

    async Task UpdateGame()
    {
        settingToSend.Time = gameToAdd.Time;
        settingToSend.Game = gameToAdd.Game;
        var newGameRes = await Http.PostAsJsonAsync("api/Games/Update", settingToSend);
        string error = newGameRes.Content.ReadAsStringAsync().Result;
        if (error != "Updated")
            CanAddQuestions = false;
        else
            CanAddQuestions = true;
        ShowError(error);
    }

    async Task AddQuestion()
    {
        GameToShow.GameID = GameCode;
        if (GameToShow.QuestionImage == null)
            GameToShow.QuestionImage = "No image";
        foreach (AnswerDB ans in GameToShow.Answers)
        {
            if (ans.AnswerImage == null)
                ans.AnswerImage = "No image";
        }
        var addQ = await Http.PostAsJsonAsync("api/Games/AddQuestion", GameToShow);
        if (addQ.IsSuccessStatusCode)
        {
            var full_game_res = await Http.GetAsync("api/Games/GetFullGame/" + GameCode);
            if (full_game_res.IsSuccessStatusCode)
            {
                full_gameInfo = full_game_res.Content.ReadFromJsonAsync<FullGame>().Result;
            }
            else if (GameName != "")
                msg = full_game_res.Content.ReadAsStringAsync().Result;
            GameToShow = new QuestionDB();
            GameToShow.QuestionText = "";
        }
    }

    async Task EditQuestion()
    {
        if (GameToShow.QuestionImage == null)
            GameToShow.QuestionImage = "No image";
        foreach (AnswerDB ans in GameToShow.Answers)
        {
            if (ans.AnswerImage == null)
                ans.AnswerImage = "No image";
        }
        var editQ = await Http.PostAsJsonAsync("api/Games/EditQuestion", GameToShow);
        if (editQ.IsSuccessStatusCode)
        {
            var full_game_res = await Http.GetAsync("api/Games/GetFullGame/" + GameCode);
            if (full_game_res.IsSuccessStatusCode)
            {
                full_gameInfo = full_game_res.Content.ReadFromJsonAsync<FullGame>().Result;
                await DeleteImages();
            }
            else if (GameName != "")
                msg = full_game_res.Content.ReadAsStringAsync().Result;
            GameToShow = new QuestionDB();
            GameToShow.Answers = new List<AnswerDB>();
            GameToShow.QuestionText = "";
            Temp = full_gameInfo;
            isShown = "false";
        }
    }

    private void AddInput()
    {
        GameToShow = new QuestionDB();
        GameToShow.QuestionText = "";
        GameToShow.Answers = new List<AnswerDB>();
        isShown = "true";
    }

    private void DeleteAns(AnswerDB ansToDelete)
    {
        GameToShow.Answers.Remove(ansToDelete);
        if (ansToDelete.AnswerImage != "No image")
            MakeDeleteList(ansToDelete.AnswerImage);
    }

    private void AddAnsText()
    {
        GameToShow.Answers.Add(new AnswerDB());
        GameToShow.Answers[GameToShow.Answers.Count - 1].AnswerImage = "No image";
    }

    private void AddAnsImage()
    {
        GameToShow.Answers.Add(new AnswerDB());
        GameToShow.Answers[GameToShow.Answers.Count - 1].AnswerText = "";
    }

    async Task RemoveQuestion(QuestionDB input)
    {
        isShown = "false";
        full_gameInfo.question_List.Remove(input);
        var deleteQ = await Http.PostAsJsonAsync("api/Games/DeleteQuestion", input);
        if (deleteQ.IsSuccessStatusCode)
            msg = deleteQ.Content.ReadAsStringAsync().Result;
    }

    async Task ShowQuestion(QuestionDB questionToShow)
    {
        if (GameName != "")
        {
            var full_game_res = await Http.GetAsync("api/Games/GetFullGame/" + GameCode);
            if (full_game_res.IsSuccessStatusCode)
            {
                Temp = full_game_res.Content.ReadFromJsonAsync<FullGame>().Result;
            }
            else if (GameName != "")
                msg = full_game_res.Content.ReadAsStringAsync().Result;
        }
        isShown = "Edit";
        GameToShow = questionToShow;
    }

    private void Cancel()
    {
        if (Temp != null)
        {
            foreach (QuestionDB i in Temp.question_List)
            {
                if (i.ID == GameToShow.ID)
                {
                    GameToShow = i;
                    full_gameInfo.question_List = Temp.question_List;
                    break;
                }
            }
        }
        DeletedImages.Clear();
        isShown = "false";
    }

    private async Task UploadQuestioImage(InputFileChangeEventArgs e, string Qimage)
    {
        var imageFiles = e.GetMultipleFiles();
        foreach (var file in imageFiles)
        {
            if (file.Size <= maxFileSize)
            {
                var buffer = new byte[file.Size];
                await file.OpenReadStream(maxFileSize).ReadAsync(buffer);
                var imageBase64 = Convert.ToBase64String(buffer);
                var saveResponse = await Http.PostAsJsonAsync("api/Images/upload", imageBase64);

                if (saveResponse.IsSuccessStatusCode == true)
                {
                    string resizeUrl = saveResponse.Content.ReadAsStringAsync().Result;

                    myFileImage = "uploadedFiles/" + resizeUrl;
                }
            }
        }
        if (Qimage != "No image" || Qimage != null)
        {
            MakeDeleteList(Qimage);
            GameToShow.QuestionImage = myFileImage;
        }
        GameToShow.QuestionImage = myFileImage;
        myFileImage = "";
    }

    private async Task UploadAnswerImage(InputFileChangeEventArgs e, AnswerDB ans)
    {
        var imageFiles = e.GetMultipleFiles();
        foreach (var file in imageFiles)
        {
            if (file.Size <= maxFileSize)
            {
                var buffer = new byte[file.Size];
                await file.OpenReadStream(maxFileSize).ReadAsync(buffer);
                var imageBase64 = Convert.ToBase64String(buffer);
                var saveResponse = await Http.PostAsJsonAsync("api/Images/upload", imageBase64);

                if (saveResponse.IsSuccessStatusCode == true)
                {
                    string resizeUrl = saveResponse.Content.ReadAsStringAsync().Result;

                    myFileImage = "uploadedFiles/" + resizeUrl;
                }
            }
        }
        foreach (AnswerDB a in GameToShow.Answers)
        {
            if (a.ID == ans.ID)
            {
                a.AnswerImage = myFileImage;
                myFileImage = "";
                break;
            }
        }
    }

    private void MakeDeleteList(string imageToDelete)
    {
        DeletedImages.Add(imageToDelete);
        if (GameToShow.QuestionImage == imageToDelete)
        {
            GameToShow.QuestionImage = "No image";
        }
    }

    private async Task DeleteImages()
    {
        var saveResponse = await Http.PostAsJsonAsync("api/Images/deleteImages", DeletedImages);

        if (saveResponse.IsSuccessStatusCode == true)
        {
            msg = "התמונות נמחקו בהצלחה";
            DeletedImages.Clear();
        }
        else
        {
            msg = saveResponse.Content.ReadAsStringAsync().Result;
        }
    }


    void ShowError(string error)
    {
        switch (error)
        {
            case "user is not authenticated":
                msg = "ארעה בעיה בעת אימות המשתמש";
                break;
            case "Game not created":
                msg = "ארעה בעיה בעת יצירת המשחק";
                break;
            case "Game code not created":
                msg = "ארעה בעיה בעת יצירת קוד המשחק";
                break;
            case "Updated":
                msg = "המשחק עודכן בהצלחה";
                break;
            case "Update failed":
                msg = "העדכון נכשל";
                break;
        }
    }
}
